library(purrr)
library(RColorBrewer)
library(patchwork)
library(ggsignif)
library(ggsignif)
library(tidyverse)
library(geosphere)
# Import phyloseq object
load("Lichens_clean.RData")
# Create a phyloseq subset for the genus Sterocaulon
physeq.ste <-  subset_samples(ps.rarefied, host_genus == "Stereocaulon")
########### ALPHA DIVERSITY #################
# ASV TABLE
otu_ste <- otu.data.table(physeq.ste)
otu_ste <- column_to_rownames(otu_ste, var = "Sample")
# Metadata
meta_ste <- sample.data.table(physeq.ste)
# Estimate diversity indexes
data_richness <- estimateR(t(otu_ste))                                          # calculate richness and Chao1 using vegan package
data_evenness <- vegan::diversity(t(otu_ste)) / log(specnumber(t(otu_ste)))     # calculate evenness index using vegan package
data_shannon <- vegan::diversity(t(otu_ste), index = "shannon")                 # calculate Shannon index using vegan package
data_alphadiv <- cbind(meta_ste, t(data_richness), data_shannon, data_evenness) # combine all indices in one data table
rm(data_richness, data_evenness, data_shannon)
# There is only one samples that was classified as Stereocaulon by morphology
data_alphadiv <- data_alphadiv %>%
filter(species.checked != "Stereocaulon novogranatense")
# Visualization
col_alp <- RColorBrewer::brewer.pal(3, "Dark2")
comparison <- list(c("Stereocaulon novogranatense", "Stereocaulon alpinum"),
c("Stereocaulon ramulosum", "Stereocaulon alpinum"),
c("Stereocaulon ramulosum", "Stereocaulon novogranatense"))
P1 <- ggplot(data_alphadiv, aes(x=species.checked, y=S.chao1)) +
geom_boxplot() +
labs(title= 'Chao1', x= ' ', y= '', tag = "A") +
geom_point() +
theme_classic()
P2 <- ggplot(data_alphadiv, aes(x=species.checked, y=data_shannon)) +
geom_boxplot() +
labs(title= 'Shannon', x= ' ', y= '', tag = "B") +
geom_point() +
theme_classic()
pdf("Stereo/AlphaD_stereo.pdf",
width = 14,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
# Stats Alpha-D
# Shannon
anova.site = aov(data_shannon ~ species.checked, data = data_alphadiv)
summary(anova.site)
TukeyHSD(anova.site)
# Chao1
anova.site.chao = aov(S.chao1 ~ species.checked, data = data_alphadiv)
summary(anova.site)
TukeyHSD(anova.site.chao)
pdf("Stereo/AlphaD_stereo.pdf",
width = 14,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
pdf("Stereo/AlphaD_stereo.pdf",
width = 12,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
pdf("Stereo/AlphaD_stereo.pdf",
width = 10,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
P1 <- ggplot(data_alphadiv, aes(x=species.checked, y=S.chao1)) +
geom_boxplot() +
labs(title= '', x= ' ', y= '', tag = "A", ylab = 'Chao1') +
geom_point() +
theme_classic()
P2 <- ggplot(data_alphadiv, aes(x=species.checked, y=data_shannon)) +
geom_boxplot() +
labs(title= '', x= ' ', y= '', tag = "B", ylab= 'Shannon') +
geom_point() +
theme_classic()
pdf("Stereo/AlphaD_stereo.pdf",
width = 10,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
P1 <- ggplot(data_alphadiv, aes(x=species.checked, y=S.chao1)) +
geom_boxplot() +
labs(title= '', x= ' ', y= 'Chao1', tag = "A") +
geom_point() +
theme_classic()
P2 <- ggplot(data_alphadiv, aes(x=species.checked, y=data_shannon)) +
geom_boxplot() +
labs(title= '', x= ' ', y= 'Shannon', tag = "B") +
geom_point() +
theme_classic()
pdf("Stereo/AlphaD_stereo.pdf",
width = 10,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
View(meta_ste)
meta_ste
S.ramulosum <- meta_ste %>% filter(species.checked == "Stereocaulon ramulosum")
S.ramulosum <- meta_ste %>% filter(species.checked == "Stereocaulon ramulosum") %>%
pull(sample.id)
View(meta_ste)
S.ramulosum <- meta_ste %>% filter(species.checked == "Stereocaulon ramulosum") %>%
pull(sample.id)
ps.stereo <- subset_samples(physeq.ste, sample.id %in% S.ramulosum)
#Longitude and latitude
sample_ste <- ps.stereo %>% sample.data.frame() %>%
arrange(site)
#Join this to phyloseq object
cord_table <- data.frame(Sample.id= sample_ste$sample.id,
Longitude=sample_ste$longitude,
Latitude= sample_ste$latitude) %>%
column_to_rownames(var = "Sample.id") %>%
mutate_at(c('Longitude','Latitude'), as.numeric)
#Calculate the Haversine distance
dist.geo <- distm(cord_table, fun = distHaversine)
rownames(dist.geo) <- sample_ste$sample.id
colnames(dist.geo) <- sample_ste$sample.id
#dist.geo <- dist.geo/1000
dist.geo <- as.matrix(dist.geo)
#Abundance matrix with bray-curtis
br.dist.stereo <- ps.stereo %>% dist_calc(dist = "bray", binary = TRUE)
df.dist.br <- br.dist.stereo@dist %>% as.matrix()
df.dist.br <- df.dist.br[sample_ste$sample.id, sample_ste$sample.id]
## Calculate mantel test for both matrices
#abundance vs geographic
abund_geo  <- mantel(df.dist.br, dist.geo, method = "spearman", permutations = 9999, na.rm = TRUE)
abund_geo
library(ape)
library(vegan)
# Order the rows and columns
od <- hclust(dist(df.dist.br))$order
m2 <- df.dist.br[od, od]
ordination <- pcoa(m2, correction = "none")
scores <- as.data.frame(ordination$vectors[,1:2]) %>% rownames_to_column(var = "sample.id")
proportion_exp <- ordination$values$Relative_eig[1:2]
#Join metadata to coordinates
atlan.bray <- merge(scores, sample_ste[,c("sample.id","site")],
by = "sample.id", all.x = TRUE)
# Set colors
col = c("#1B9E77","#E6F598","#CA9822", "#351B9E")
pdf("Stereo/PCoA_stereo_atlanticum.pdf",
width = 8,
height = 5)
atlan.bray %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = site), size = 3, pch = 21, color = "black") +
geom_hline(yintercept = 0, linetype = "dotted") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, linetype = "dotted") +  # Add vertical line at x = 0
scale_fill_manual(values = col, name = "Collection site") +
theme_minimal() +
scale_size(guide = "none") +  # Remove legend
labs(x = paste0("Axis 1 (", round(proportion_exp[1] * 100), "%)"),  # Adjusted axis labels with percentages
y = paste0("Axis 2 (", round(proportion_exp[2] * 100), "%)"),  # Adjusted axis labels with percentages
title = "PCoA Stereocaulon ramulosum") +  # Improved title
theme(axis.title = element_text(size = 12),  # Increased size of axis labels
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))  # Increased size and bold title
dev.off()
# Set colors
col = c("#1B9E77","#E6F598","#CA9822", "#351B9E")
pdf("Stereo/PCoA_Stereo_ramulosum.pdf",
width = 8,
height = 5)
atlan.bray %>%
ggplot(aes(Axis.1, Axis.2)) +
geom_point(aes(fill = site), size = 3, pch = 21, color = "black") +
geom_hline(yintercept = 0, linetype = "dotted") +  # Add horizontal line at y = 0
geom_vline(xintercept = 0, linetype = "dotted") +  # Add vertical line at x = 0
scale_fill_manual(values = col, name = "Collection site") +
theme_minimal() +
scale_size(guide = "none") +  # Remove legend
labs(x = paste0("Axis 1 (", round(proportion_exp[1] * 100), "%)"),  # Adjusted axis labels with percentages
y = paste0("Axis 2 (", round(proportion_exp[2] * 100), "%)"),  # Adjusted axis labels with percentages
title = "PCoA Stereocaulon ramulosum") +  # Improved title
theme(axis.title = element_text(size = 12),  # Increased size of axis labels
plot.title = element_text(size = 14, face = "bold"),
panel.border = element_rect(color = "black", fill = NA, size = 1))  # Increased size and bold title
dev.off()
#title: "Genus_Sticta"
#author: "Alejandra Ulloa"
#This script was used to analyze samples of the genus Cora
# Load packages to be use
library(phyloseq)
library(data.table)
library(tidyr)
library(ggplot2)
library(ape)
library(vegan)
library(dplyr)
library(tibble)
library(phyloseqCompanion)
library(microViz)
library(ggsci)
library(purrr)
library(RColorBrewer)
library(patchwork)
library(ggsignif)
library(ggsignif)
library(tidyverse)
######## Import clean phyloseq object ##########
load("Lichens_clean.RData")
# Keep only samples corresponding to the Cora genus in Phyloseq object
physeq.cora <-  subset_samples(ps.rarefied, host_genus == "Cora")
########### ALPHA DIVERSITY #################
# OTU TABLE
otu.cora <- otu.data.table(physeq.cora)
otu.cora <- column_to_rownames(otu.cora, var = "Sample")
# Metadata
meta_cora <- sample.data.table(physeq.cora)
# Estimate diversity indexes
data_richness <- estimateR(t(otu.cora))                                         # calculate richness and Chao1 using vegan package
data_evenness <- vegan::diversity(t(otu.cora)) / log(specnumber(t(otu.cora)))   # calculate evenness index using vegan package
data_shannon <- vegan::diversity(t(otu.cora), index = "shannon")                # calculate Shannon index using vegan package
data_alphadiv <- cbind(meta_cora, t(data_richness), data_shannon, data_evenness)# combine all indices in one data table
rm(data_richness, data_evenness, data_shannon)                                  # remove the unnecessary data/vector
View(data_alphadiv)
#Ditch species with only one sample
data_alphadiv <- data_alphadiv %>% filter(species.checked > 3)
View(data_alphadiv)
#Ditch species with only one sample
data_alphadiv <- data_alphadiv %>% filter(species.checked >= 3)
data_alphadiv <- data_alphadiv %>%
group_by(species.checked) %>%
filter(n() > 3) %>%
View(data_alphadiv)
data_alphadiv <- data_alphadiv %>%
group_by(species.checked) %>%
filter(n() > 3) %>%
ungroup()
data_alphadiv
data_richness <- estimateR(t(otu.cora))                                         # calculate richness and Chao1 using vegan package
data_evenness <- vegan::diversity(t(otu.cora)) / log(specnumber(t(otu.cora)))   # calculate evenness index using vegan package
data_shannon <- vegan::diversity(t(otu.cora), index = "shannon")                # calculate Shannon index using vegan package
data_alphadiv <- cbind(meta_cora, t(data_richness), data_shannon, data_evenness)# combine all indices in one data table
rm(data_richness, data_evenness, data_shannon)                                  # remove the unnecessary data/vector
#Ditch species with only one sample
data_alphadiv <- data_alphadiv %>%
group_by(species.checked) %>%
filter(n() > 3) %>%
ungroup()
View(data_alphadiv)
data_alphadiv <- cbind(meta_cora, t(data_richness), data_shannon, data_evenness)# combine all indices in one data table
data_richness <- estimateR(t(otu.cora))                                         # calculate richness and Chao1 using vegan package
data_evenness <- vegan::diversity(t(otu.cora)) / log(specnumber(t(otu.cora)))   # calculate evenness index using vegan package
data_shannon <- vegan::diversity(t(otu.cora), index = "shannon")                # calculate Shannon index using vegan package
data_alphadiv <- cbind(meta_cora, t(data_richness), data_shannon, data_evenness)# combine all indices in one data table
rm(data_richness, data_evenness, data_shannon)                                  # remove the unnecessary data/vector
View(data_alphadiv)
data_richness <- estimateR(t(otu.cora))                                         # calculate richness and Chao1 using vegan package
data_evenness <- vegan::diversity(t(otu.cora)) / log(specnumber(t(otu.cora)))   # calculate evenness index using vegan package
data_shannon <- vegan::diversity(t(otu.cora), index = "shannon")                # calculate Shannon index using vegan package
data_alphadiv <- cbind(meta_cora, t(data_richness), data_shannon, data_evenness)# combine all indices in one data table
rm(data_richness, data_evenness, data_shannon)                                  # remove the unnecessary data/vector
data_alphadiv <- data_alphadiv %>%
mutate(new_species = if_else(species.checked == "Cora paraciferrii", species.checked, "Cora_sp"))
anova.site = aov(data_shannon ~ host_species_ITS, data = data_alphadiv)
TukeyHSD(anova.site)
anova.site.chao = aov(S.chao1 ~ host_species_ITS, data = data_alphadiv)
TukeyHSD(anova.site.chao)
anova.site = aov(data_shannon ~ new_species, data = data_alphadiv)
TukeyHSD(anova.site)
anova.site.chao = aov(S.chao1 ~ new_species, data = data_alphadiv)
TukeyHSD(anova.site.chao)
# Visualization
col_alp <- RColorBrewer::brewer.pal(2, "Dark2")
P1 <- ggplot(data_alphadiv, aes(x=new_species, y=S.chao1)) +
geom_boxplot() +
labs(title= 'Chao1', x= ' ', y= '', tag = "A") +
geom_signif(comparisons = list(c("Cora_paraciferrii", "Cora_sp")),
map_signif_level = TRUE,
textsize = 4,
margin_top = 0.08,
step_increase = 0.08,
tip_length = 0.01) +
geom_point() +
theme_classic()
P2 <- ggplot(data_alphadiv, aes(x=new_species, y=data_shannon)) +
geom_boxplot() +
labs(title= 'Shannon', x= ' ', y= '', tag = "B") +
geom_signif(comparisons = list(c("Cora_paraciferrii", "Cora_sp")),
map_signif_level = TRUE,
textsize = 4,
margin_top = 0.08,
step_increase = 0.08,
tip_length = 0.01) +
geom_point() +
theme_classic()
P1 | P2  + plot_annotation(tag_levels = 'A')
# Visualization
col_alp <- RColorBrewer::brewer.pal(2, "Dark2")
P1 <- ggplot(data_alphadiv, aes(x=new_species, y=S.chao1)) +
geom_boxplot() +
labs(title= '', x= ' ', y= 'Chao1', tag = "A") +
geom_signif(comparisons = list(c("Cora_paraciferrii", "Cora_sp")),
map_signif_level = TRUE,
textsize = 4,
margin_top = 0.08,
step_increase = 0.08,
tip_length = 0.01) +
geom_point() +
theme_classic()
P2 <- ggplot(data_alphadiv, aes(x=new_species, y=data_shannon)) +
geom_boxplot() +
labs(title= '', x= ' ', y= 'Shannon', tag = "B") +
geom_signif(comparisons = list(c("Cora_paraciferrii", "Cora_sp")),
map_signif_level = TRUE,
textsize = 4,
margin_top = 0.08,
step_increase = 0.08,
tip_length = 0.01) +
geom_point() +
theme_classic()
# all plots together using the patchwork package
pdf("Cora/alphaD_cora.pdf",
width = 12,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
#title: "Genus_Stereocaulon"
#author: "Alejandra Ulloa"
#date: 'December 2023'
#This script was used to analyze samples of the genus Stereocualon
#Load packages to be use
library(phyloseq)
library(data.table)
library(tidyr)
library(ggplot2)
library(ape)
library(vegan)
library(dplyr)
library(tibble)
library(phyloseqCompanion)
library(microViz)
library(ggsci)
library(purrr)
library(RColorBrewer)
library(patchwork)
library(ggsignif)
library(ggsignif)
library(tidyverse)
library(geosphere)
# Import phyloseq object
load("Lichens_clean.RData")
# Create a phyloseq subset for the genus Sterocaulon
physeq.ste <-  subset_samples(ps.rarefied, host_genus == "Stereocaulon")
########### ALPHA DIVERSITY #################
# ASV TABLE
otu_ste <- otu.data.table(physeq.ste)
otu_ste <- column_to_rownames(otu_ste, var = "Sample")
# Metadata
meta_ste <- sample.data.table(physeq.ste)
# Estimate diversity indexes
data_richness <- estimateR(t(otu_ste))                                          # calculate richness and Chao1 using vegan package
data_evenness <- vegan::diversity(t(otu_ste)) / log(specnumber(t(otu_ste)))     # calculate evenness index using vegan package
data_shannon <- vegan::diversity(t(otu_ste), index = "shannon")                 # calculate Shannon index using vegan package
data_alphadiv <- cbind(meta_ste, t(data_richness), data_shannon, data_evenness) # combine all indices in one data table
rm(data_richness, data_evenness, data_shannon)
# There is only one samples that was classified as Stereocaulon by morphology
data_alphadiv <- data_alphadiv %>%
filter(species.checked != "Stereocaulon novogranatense")
# Visualization
col_alp <- RColorBrewer::brewer.pal(2, "Dark2")
P1 <- ggplot(data_alphadiv, aes(x=species.checked, y=S.chao1)) +
geom_boxplot() +
labs(title= '', x= ' ', y= 'Chao1', tag = "A") +
geom_point() +
theme_classic()
P2 <- ggplot(data_alphadiv, aes(x=species.checked, y=data_shannon)) +
geom_boxplot() +
labs(title= '', x= ' ', y= 'Shannon', tag = "B") +
geom_point() +
theme_classic()
pdf("Stereo/AlphaD_stereo.pdf",
width = 10,
height = 6
)
P1 | P2  + plot_annotation(tag_levels = 'A')
dev.off()
# Stats Alpha-D
# Shannon
anova.site = aov(data_shannon ~ species.checked, data = data_alphadiv)
summary(anova.site)
TukeyHSD(anova.site)
# Chao1
anova.site.chao = aov(S.chao1 ~ species.checked, data = data_alphadiv)
summary(anova.site)
TukeyHSD(anova.site.chao)
############################################
## Subset for Sterocaulon Atlanticus
S.ramulosum <- meta_ste %>% filter(species.checked == "Stereocaulon ramulosum") %>%
pull(sample.id)
ps.stereo <- subset_samples(physeq.ste, sample.id %in% S.ramulosum)
################################################################################
############################### Geospatial analysis ############################
################################################################################
#Longitude and latitude
sample_ste <- ps.stereo %>% sample.data.frame() %>%
arrange(site)
#Join this to phyloseq object
cord_table <- data.frame(Sample.id= sample_ste$sample.id,
Longitude=sample_ste$longitude,
Latitude= sample_ste$latitude) %>%
column_to_rownames(var = "Sample.id") %>%
mutate_at(c('Longitude','Latitude'), as.numeric)
#Calculate the Haversine distance
dist.geo <- distm(cord_table, fun = distHaversine)
rownames(dist.geo) <- sample_ste$sample.id
colnames(dist.geo) <- sample_ste$sample.id
#dist.geo <- dist.geo/1000
dist.geo <- as.matrix(dist.geo)
#Abundance matrix with bray-curtis
br.dist.stereo <- ps.stereo %>% dist_calc(dist = "bray", binary = TRUE)
df.dist.br <- br.dist.stereo@dist %>% as.matrix()
df.dist.br <- df.dist.br[sample_ste$sample.id, sample_ste$sample.id]
## Calculate mantel test for both matrices
#abundance vs geographic
abund_geo  <- mantel(df.dist.br, dist.geo, method = "spearman", permutations = 9999, na.rm = TRUE)
abund_geo
#Load packages to be use
library(phyloseq)
library(data.table)
library(tidyr)
library(ggplot2)
library(ape)
library(vegan)
library(dplyr)
library(tibble)
library(phyloseqCompanion)
library(microViz)
library(ggsci)
library(purrr)
library(RColorBrewer)
library(patchwork)
library(ggsignif)
######## Import clean phyloseq object ##########
load("Lichens_clean.RData")
#######
######################## CORE PREVALENCE ######################
# Fix taxonomy labels for microviz to work
ps.asv <- ps.rarefied %>%
tax_fix(min_length = 4,
unknowns = c("g__Unknown_Family",
"f__Unknown_Family",
"g__Unknown_Family Genus",
"g__uncultured",
"f__uncultured",
"o__uncultured",
"g__1174-901-12"),
sep = " ", anon_unique = TRUE,
suffix_rank = "classified")
# Collapse to Family level
ps.family <- tax_agg(ps.asv, rank = "Family")
##Function
lichen_melt = function(physeq,
includeSampleVars = character(),
omitZero = FALSE){
# supports otu_table as `physeq` input.
otutab = as(otu_table(physeq), "matrix")
if(!taxa_are_rows(physeq)){otutab <- t(otutab)}
otudt = data.table(otutab, keep.rownames = TRUE)
setnames(otudt, "rn", "TaxaID")
# Enforce character TaxaID key
otudt[, TaxaIDchar := as.character(TaxaID)]
otudt[, TaxaID := NULL]
setnames(otudt, "TaxaIDchar", "TaxaID")
# Melt count table
mdt = melt.data.table(otudt,
id.vars = "TaxaID",
variable.name = "SampleID",
value.name = "count")
# Calculate relative abundance
mdt[, RelativeAbundance := count / sum(count), by = SampleID] #Sum of counts
if(!is.null(tax_table(physeq, errorIfNULL = FALSE))){
# If there is a tax_table, join with it.
taxdt = data.table(as(tax_table(physeq, errorIfNULL = TRUE), "matrix"), keep.rownames = TRUE)
setnames(taxdt, "rn", "TaxaID")
# Enforce character TaxaID key
taxdt[, TaxaIDchar := as.character(TaxaID)]
taxdt[, TaxaID := NULL]
setnames(taxdt, "TaxaIDchar", "TaxaID")
# Join with tax table
setkey(taxdt, "TaxaID")
setkey(mdt, "TaxaID")
mdt <- taxdt[mdt]
}
setkey(mdt, "TaxaID")
return(mdt)
}
mdt = lichen_melt(ps.family) # Change for ps.asv for asv
lichen.prev = mdt[, list(Prevalence = mean(count > 0), #Mean of samples with counts greater than cero
TotalCounts = sum(count)),
by = TaxaID]
addPhylum = unique(copy(mdt[, list(TaxaID, Phylum)])) #Color taxa by phylum
# Join by TaxaID
setkey(lichen.prev, TaxaID)
setkey(addPhylum, TaxaID)
lichen.prev <- addPhylum[lichen.prev]
showPhyla = lichen.prev[, sum(TotalCounts), by = Phylum][order(-V1)][1:10]$Phylum
setkey(lichen.prev, Phylum)
View(lichen.prev)
